apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: image-updater-application  
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/image-list: myalias=docker.io/kishoredurai/kishore-nginx,sidecar=docker.io/busybox
    argocd-image-updater.argoproj.io/myalias.pull-secret: pullsecret:argocd/dockerhub-secret 
    argocd-image-updater.argoproj.io/sidecar.pull-secret: pullsecret:argocd/dockerhub-secret  # You can remove this annotation if you have already configured the gcr secret and are using the same secret to retrieve all GCR images in your deployments.
    argocd-image-updater.argoproj.io/myalias.update-strategy: latest
    argocd-image-updater.argoproj.io/sidecar.update-strategy: latest
    argocd-image-updater.argoproj.io/nginx.ignore-tags: latest
    argocd-image-updater.argoproj.io/write-back-method: git          
    argocd-image-updater.argoproj.io/git-branch: image-updater
    argocd-image-updater.argoproj.io/myalias.force-update: "true"
    argocd-image-updater.argoproj.io/sidecar.force-update: "true"

spec:
  project: default

  source:
    repoURL: git@github.com:kishoredurai/argocd-poc.git
    targetRevision: image-updater  
    path: argocd-image-updater/dev # path of the kubernetes application code means where you stored deployment.yaml, service.yaml etc

    
  destination:
    server: https://kubernetes.default.svc  # if you want to deploy application in the same cluster where argocd server is running if thats diffrent then use cluster IP address.
    namespace: myapp

  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true